# [PackageDev] target_format: plist, ext: tmLanguage
---
name: Z80 Assembly
scopeName: source.z80
fileTypes: [z80, inc, asm]
uuid: f4a5c5a2-42d5-4806-8abf-87ce87fd03da

patterns:
- include: '#comments'
- include: '#constants'
- include: '#strings'
- include: '#labels'
- include: '#directives'
- include: '#mnemorics'
- include: '#registers'
- include: '#operators'
- include: '#variables'

repository:
  comments:
    patterns:
    - name: comment.line.z80
      begin: ;
      end: $\n?
    - name: comment.block.z80
      begin: /\*
      end: \*/

  constants:
    patterns:
    - name: constant.numeric.integer.hexadecimal.z80
      match: (\b0[xX][a-fA-F0-9]+|\b[a-fA-F0-9]+[hH]|\$[a-fA-F0-9]+)\b
    - name: constant.numeric.integer.decimal.z80
      match: (\b0[oO][0-7]+|\b[0-7]+[oO]|@[0-7]+)\b
    - name: constant.numeric.integer.octal.z80
      match: \b([0-9]+[dD]?)\b
    - name: constant.numeric.integer.binary.z80
      match: (\b0[bB][01]+|\b[01]+[bB]|%[01]+)\b
    - name: constant.other.z80
      match: \$

  strings:
    patterns:
    - name: string.quoted.double.z80
      begin: \"
      end: \"
      patterns:
      - include: '#escapes'
    - name: string.quoted.single.z80
      begin: \'
      end: \'
      patterns:
      - include: '#escapes'

  escapes:
    patterns:
    - name: constant.character.escape.bell.z80
      match: \\a
    - name: constant.character.escape.backspace.z80
      match: \\b
    - name: constant.character.escape.feed.z80
      match: \\f
    - name: constant.character.escape.newline.z80
      match: \\n
    - name: constant.character.escape.carriagereturn.z80
      match: \\r
    - name: constant.character.escape.tabulator.z80
      match: \\t
    - name: constant.character.escape.verticaltabulator.z80
      match: \\v
    - name: constant.character.escape.single-quote.z80
      match: \\'
    - name: constant.character.escape.double-quote.z80
      match: \\\"
    - name: constant.character.escape.hexadecimal.z80
      match: \\x[a-fA-F\d]{2}
    - name: constant.character.escape.octal.z80
      match: \\[0-7]{3}
    - name: constant.character.escape.question.z80
      match: \\?
    - name: constant.character.escape.backslash.z80
      match: \\\\

  labels:
    patterns:
    - name: entity.name.label.z80
      match: (^|\s+)\.?[a-zA-Z_$][a-zA-Z0-9_.$]*::?

  directives:
    patterns:
    - name: keyword.control.import.z80
      match: (?i)(?:^|\s+)([.#]?!?(?:include|incbin))\b
    - name: keyword.control.z80
      match: (?i)(?:^|\s+)([.#]?!?(?:area|addinstr|ascii|asciiz|asciip|align|assume|avsym|block|db|ds|dw|byte|chk|codes|def|define|defcont|echo|eject|elif|end|endif|endm|endmacro|else|elseif|equ|equs|equate|error|export|fill|if|ifdef|ifndef|import|list|locallabelchar|lsfirst|macro|module|msfirst|nocodes|nolist|nopage|option|org|page|printf|println|purge|section|seek|set|show|sym|text|title|word))\b

  mnemorics:
    patterns:
    - match: (?i)\b(call|jp|jr|ret)\s+(z|nz|c|nc|po|pe|p|m)\b
      captures:
        '1':
          name: keyword.control.word.z80
        '2':
          name: constant.language.condition.z80
    - name: keyword.control.word.z80
      match: (?i)\b(adc|add|and|bit|call|ccf|cp|cpd|cpdr|cpi|cpir|cpl|daa|dec|di|djnz|ei|ex|exx|halt|im|in|inc|ind|indr|ini|inir|jp|jr|ld|ldd|lddr|ldi|ldir|neg|nop|or|otdr|otir|out|outd|outi|pop|push|res|ret|reti|retn|rl|rla|rlc|rlca|rld|rr|rra|rrc|rrca|rrd|rst|sbc|scf|set|sla|sll|sra|srl|sub|xor)\b

  registers:
    patterns:
    - name: constant.language.register.z80
      match: (?i)\baf''
    - name: constant.language.register.z80
      match: (?i)\b([abcdefhlir]|ixl|ixh|iyl|iyh)\b
    - name: constant.language.register.z80
      match: (?i)\b(af|bc|de|hl|sp|pc|ix|iy)\b

  operators:
    patterns:
    - name: keyword.operator.logical.z80
      match: (!=|==|>=|<=|>|<|&&|\|\|)
    - name: keyword.operator.arithmetic.z80
      match: ([+*/%!-])
    - name: keyword.operator.bitwise.z80
      match: ([&|~^]|<<|>>)

  variables:
    name: meta.variable.z80
    patterns:
    - name: entity.name.constant.z80
      match: \b[A-Z_][A-Z0-9_]*\b
    - name: variable.other.z80
      match: \b[A-Za-z_.][A-Za-z0-9_]*\b